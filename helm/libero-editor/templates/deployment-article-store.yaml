apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "libero-editor.fullname" . }}-article-store
  labels:
    app.kubernetes.io/name: {{ include "libero-editor.name" . }}
    helm.sh/chart: {{ include "libero-editor.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: article-store
spec:
  replicas: {{ .Values.articleStore.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "libero-editor.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: article-store
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "libero-editor.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: article-store
    spec:
      containers:
        - name: {{ .Chart.Name }}-article-store
          image: "{{ .Values.articleStore.image.repository }}:{{ .Values.articleStore.image.tag }}"
          imagePullPolicy: {{ .Values.articleStore.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: DB_ENDPOINT
              value: {{ .Values.database.endpoint | quote }}
            - name: DB_URI_QUERY
              value: {{ .Values.database.query | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret | quote }}
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret | quote }}
                  key: password
            - name: DB_NAME
              value: {{ .Values.database.name | quote }}
            - name: DB_SSL_VALIDATE
              value: {{ .Values.database.sslValidate | quote }}
            - name: AWS_REGION
              value: {{ .Values.aws.region | quote }}
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.secret | quote }}
                  key: key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.secret | quote }}
                  key: secret
            - name: AWS_BUCKET_INPUT_EVENT_QUEUE_URL
              value: {{ .Values.aws.sqsUrl | quote }}
            - name: AWS_ENDPOINT
            {{- if .Values.aws.endpoint }}
              value: "{{ .Values.aws.endpoint }}"
            {{ else }}
              value: "s3.{{ .Values.aws.region }}.amazonaws.com"
            {{ end -}}
            - name: AWS_EDITOR_BUCKET
              value: {{ .Values.aws.bucket | quote }}
            - name: IMPORT_TRANSFORM_ENABLED
              value: {{ .Values.articleStore.importTransformEnabled | quote }}
            - name: IMPORT_TRANSFORM_URL
              value: 'http://{{ include "libero-editor.fullname" . }}-basex-transformer:8984/v1tov2'
            - name: EXPORT_TRANSFORM_ENABLED
              value: {{ .Values.articleStore.exportTransformEnabled | quote }}
            - name: EXPORT_TRANSFORM_URL
              value: 'http://{{ include "libero-editor.fullname" . }}-basex-transformer:8984/v2tov1'
